Create enumerations for fuel, body and transmission
    Fuel: DIESEL, PETROL, ELECTRICITY
    transport.Transmission: MANUAL, AUTOMATIC
    transport.Body: SEDAN, HATCHBACK, SALOON

Create interfaces
    Movable (Transport implements Movable)
        void move(int meters)
        int getTotalMetersMoved()
    CanDrive extends Movable (LandTransport implements CanDrive)
        int getNumberOfWheels()
        default void drive(int meters) {
            move(meters)
        }
    CanFly extends Movable (AirTransport implements CanFly)
        void fly(int meters)
    CanSwim extends Movable (WaterTransport implements CanSwim)
        void swim(int meters)

Upgrade our Plane class
    Plane extends AirTransport implements CanDrive
    plane.fly(int meters)
        pavaziuoja 100
        nuskrenda meters
        pavaziuoja 100

Upgrade transport engine using generics
    Create Powered<T> interface
        T getFuel();
        boolean hasPower();
        void work();
    Create Engine class
        should be powered by Fuel enum
        public class Engine implements Powered<Fuel>
    Add the engine to Transport
        remove String engine and String fuel fields
        add Engine engine field
        update constructors

-- EXTRA --
Allow transport to not have an engine
    Use Optional<T> class to make engine Optional<Engine>
